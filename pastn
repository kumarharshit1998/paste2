@using LossMitigationMVC.Models.AutoFillModels;
@model ManualAutoFillModel
@{
    ViewData["Title"] = "Manual Add Prospect";
}

<h2 class="text-center">Manual Add Prospect</h2>

<form asp-action="ManualAdd" method="post" class="container">
    <div class="row border p-3 bg-light">
        <div class="col-md-6">
            <div class="form-group d-flex align-items-center">
                <label asp-for="AccountNo" class="mr-2">Account Number: </label>
                <input asp-for="AccountNo" class="form-control w-50" id="accountNumber" />
                <button type="button" class="btn btn-secondary ml-2" id="cifLookupButton">CIF Lookup</button>
            </div>
            <div class="form-group">
                <label for="clientName">Name:</label>
                <input type="text" class="form-control" id="clientName" readonly />
            </div>
            <div class="form-group">
                <label for="clientAddress">Address:</label>
                <input type="text" class="form-control" id="clientAddress" readonly />
            </div>
            <div class="form-group">
                <label for="clientPhoneNumber">Phone Number:</label>
                <input type="text" class="form-control" id="clientPhoneNumber" readonly />
            </div>
        </div>
    </div>
</form>

<script>
document.getElementById("cifLookupButton").addEventListener("click", function () {
    let accountNumber = document.getElementById("accountNumber").value;

    if (!accountNumber) {
        alert("Please enter an account number.");
        return;
    }

    fetch("/CIFSearch/SearchClient", {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify(accountNumber)
    })
    .then(response => response.json())
    .then(data => {
        if (data.error) {
            alert(data.error);
        } else {
            document.getElementById("clientName").value = data.Name;
            document.getElementById("clientAddress").value = data.Address;
            document.getElementById("clientPhoneNumber").value = data.PhoneNumber;
        }
    })
    .catch(error => console.error("Error:", error));
});
</script>













 [HttpPost]
        public async Task<IActionResult> SearchClient([FromBody] string accountNumber)
        {
            var clientRecords = await _cifService.GetClientDataAsync(accountNumber);

            if (clientRecords != null && clientRecords.Any())
            {
                var firstRecord = clientRecords.First();
                return Json(new
                {
                    Name = firstRecord.Name ?? "N/A",
                    Address = firstRecord.Address ?? "N/A",
                    PhoneNumber = firstRecord.PhoneNumber ?? "N/A"
                });
            }

            return Json(new { error = "No client found" });
        }
