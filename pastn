if (response == null || response.ClientSearchReply == null)
    {
        Console.WriteLine("SOAP response is null");
        return null;
    }

    // Log raw SOAP response
    Console.WriteLine($"Raw SOAP Response: {response}");

    // Deserialize XML response
    var xmlSerializer = new XmlSerializer(typeof(ClientSearchReply));
    using (var reader = new StringReader(response.ClientSearchReply.ToString()))
    {
        var clientSearchReply = (ClientSearchReply)xmlSerializer.Deserialize(reader);
        return clientSearchReply?.ClientRecord?.ToList();
    }
}




[HttpGet]
public async Task<IActionResult> SearchClient(string accountNumber)
{
    if (string.IsNullOrEmpty(accountNumber))
    {
        return Json(new { error = "Account number is required" });
    }

    var clientRecords = await _clientSoapService.GetClientDataAsync(accountNumber);

    if (clientRecords == null || !clientRecords.Any())
    {
        Console.WriteLine("No client data found for account: " + accountNumber);
        return Json(new { error = "No client data found" });
    }

    var firstRecord = clientRecords.First();
    
    Console.WriteLine($"Returning data: Name={firstRecord.Name}, Address={firstRecord.Address}, Phone={firstRecord.PhoneNumber}");

    return Json(new
    {
        Name = firstRecord.Name ?? "N/A",
        Address = firstRecord.Address ?? "N/A",
        PhoneNumber = firstRecord.PhoneNumber ?? "N/A"
    });
}
